{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation UNSUBSCRIBE_USER_MUTATION($planId: String!) {\\n    unsubscribe(planId: $planId) {\\n      id\\n      subscriptionId\\n      plansSubscribed\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { Mutation } from 'react-apollo';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { CURRENT_USER_QUERY } from './wrappers/User';\nimport { STRIPE_PUBLIC_KEY } from '../config';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport SickButton from './styles/SickButton';\nvar UNSUBSCRIBE_USER_MUTATION = gql(_templateObject());\n\nvar Unsubscribe = /*#__PURE__*/function (_React$Component) {\n  _inherits(Unsubscribe, _React$Component);\n\n  var _super = _createSuper(Unsubscribe);\n\n  function Unsubscribe() {\n    var _this;\n\n    _classCallCheck(this, Unsubscribe);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"onClick\", function _callee(planId, unsubscribe) {\n      var res;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(unsubscribe({\n                variables: {\n                  planId: planId\n                }\n              }));\n\n            case 2:\n              res = _context.sent;\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n\n    return _this;\n  }\n\n  _createClass(Unsubscribe, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props$plan = this.props.plan,\n          planId = _this$props$plan.planId,\n          description = _this$props$plan.description;\n      return __jsx(Mutation, {\n        mutation: UNSUBSCRIBE_USER_MUTATION,\n        refetchQueries: [{\n          query: CURRENT_USER_QUERY\n        }]\n      }, function (unsubscribe, _ref) {\n        var loading = _ref.loading,\n            error = _ref.error;\n        return __jsx(\"div\", null, __jsx(\"h2\", null, planId), __jsx(SickButton, {\n          disabled: loading,\n          onClick: function onClick() {\n            return _this2.onClick(planId, unsubscribe);\n          }\n        }, \"Unsubscrib\", loading ? 'ing' : 'e'));\n      });\n    }\n  }]);\n\n  return Unsubscribe;\n}(React.Component);\n\nexport { Unsubscribe as default };","map":null,"metadata":{},"sourceType":"module"}