{"ast":null,"code":"import withApollo from \"next-with-apollo\";\nimport ApolloClient from \"apollo-boost\";\nimport { endpoint, prodEndPoint } from \"../config\"; //https://github.com/apollographql/apollo-client/issues/4193\n\nfunction createClient(_ref) {\n  var headers = _ref.headers;\n  return new ApolloClient({\n    uri: process.env.NODE_ENV === \"development\" ? endpoint : prodEndPoint,\n    request: function request(operation) {\n      operation.setContext({\n        fetchOptions: {\n          credentials: \"include\"\n        },\n        headers: {\n          cookie: headers && headers.cookie\n        }\n      });\n    },\n    //local data\n    clientState: {\n      resolvers: {},\n      defaults: {\n        cartOpen: false\n      }\n    }\n  });\n}\n\nexport default withApollo(createClient);","map":{"version":3,"sources":["/Users/jakecasey/Documents/Projects/skeleton-key-frontend/lib/withData.js"],"names":["withApollo","ApolloClient","endpoint","prodEndPoint","createClient","headers","uri","process","env","NODE_ENV","request","operation","setContext","fetchOptions","credentials","cookie","clientState","resolvers","defaults","cartOpen"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,kBAAvB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,WAAvC,C,CAEA;;AACA,SAASC,YAAT,OAAmC;AAAA,MAAXC,OAAW,QAAXA,OAAW;AACjC,SAAO,IAAIJ,YAAJ,CAAiB;AACtBK,IAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GAAyCP,QAAzC,GAAoDC,YADnC;AAEtBO,IAAAA,OAAO,EAAE,iBAAAC,SAAS,EAAI;AACpBA,MAAAA,SAAS,CAACC,UAAV,CAAqB;AACnBC,QAAAA,YAAY,EAAE;AACZC,UAAAA,WAAW,EAAE;AADD,SADK;AAInBT,QAAAA,OAAO,EAAE;AAAEU,UAAAA,MAAM,EAAEV,OAAO,IAAIA,OAAO,CAACU;AAA7B;AAJU,OAArB;AAMD,KATqB;AAUtB;AACAC,IAAAA,WAAW,EAAE;AACXC,MAAAA,SAAS,EAAE,EADA;AAEXC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,QAAQ,EAAE;AADF;AAFC;AAXS,GAAjB,CAAP;AAkBD;;AAED,eAAenB,UAAU,CAACI,YAAD,CAAzB","sourcesContent":["import withApollo from \"next-with-apollo\";\nimport ApolloClient from \"apollo-boost\";\nimport { endpoint, prodEndPoint } from \"../config\";\n\n//https://github.com/apollographql/apollo-client/issues/4193\nfunction createClient({ headers }) {\n  return new ApolloClient({\n    uri: process.env.NODE_ENV === \"development\" ? endpoint : prodEndPoint,\n    request: operation => {\n      operation.setContext({\n        fetchOptions: {\n          credentials: \"include\"\n        },\n        headers: { cookie: headers && headers.cookie }\n      });\n    },\n    //local data\n    clientState: {\n      resolvers: {},\n      defaults: {\n        cartOpen: false\n      }\n    }\n  });\n}\n\nexport default withApollo(createClient);\n"]},"metadata":{},"sourceType":"module"}