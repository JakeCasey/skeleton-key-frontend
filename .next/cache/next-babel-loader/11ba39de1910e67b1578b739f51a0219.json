{"ast":null,"code":"var _jsxFileName = \"/Users/jakecasey/Documents/Projects/fraud/fakestripe/skeleton-key-frontend/components/wrappers/User.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport PropTypes from 'prop-types';\nconst CURRENT_USER_QUERY = gql`\n  query {\n    me {\n      id\n      email\n      name\n      permissions\n      plansSubscribed\n    }\n  }\n`;\n\nconst User = props => {\n  return __jsx(Query, _extends({}, props, {\n    query: CURRENT_USER_QUERY,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }), payload => props.children(payload));\n};\n\nUser.propTypes = {\n  children: PropTypes.func.isRequired\n};\nexport default User;\nexport { CURRENT_USER_QUERY };","map":{"version":3,"sources":["/Users/jakecasey/Documents/Projects/fraud/fakestripe/skeleton-key-frontend/components/wrappers/User.js"],"names":["Query","gql","PropTypes","CURRENT_USER_QUERY","User","props","payload","children","propTypes","func","isRequired"],"mappings":";;;;;;AAAA,SAASA,KAAT,QAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,MAAMC,kBAAkB,GAAGF,GAAI;;;;;;;;;;CAA/B;;AAYA,MAAMG,IAAI,GAAGC,KAAK,IAAI;AACpB,SACE,MAAC,KAAD,eAAWA,KAAX;AAAkB,IAAA,KAAK,EAAEF,kBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGG,OAAO,IAAID,KAAK,CAACE,QAAN,CAAeD,OAAf,CADd,CADF;AAKD,CAND;;AAQAF,IAAI,CAACI,SAAL,GAAiB;AACfD,EAAAA,QAAQ,EAAEL,SAAS,CAACO,IAAV,CAAeC;AADV,CAAjB;AAIA,eAAeN,IAAf;AACA,SAASD,kBAAT","sourcesContent":["import { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\n\nimport PropTypes from 'prop-types';\n\nconst CURRENT_USER_QUERY = gql`\n  query {\n    me {\n      id\n      email\n      name\n      permissions\n      plansSubscribed\n    }\n  }\n`;\n\nconst User = props => {\n  return (\n    <Query {...props} query={CURRENT_USER_QUERY}>\n      {payload => props.children(payload)}\n    </Query>\n  );\n};\n\nUser.propTypes = {\n  children: PropTypes.func.isRequired,\n};\n\nexport default User;\nexport { CURRENT_USER_QUERY };\n"]},"metadata":{},"sourceType":"module"}